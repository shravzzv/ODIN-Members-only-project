/* Components are interactive building blocks for creating a user interface. All styles below emulate the material design 3 components. */

nav {
  z-index: 1;

  .headline {
    display: none;
  }

  ul {
    list-style-type: none;
    margin: 0;
    padding: 0;

    li {
      a {
        text-decoration: none;
        color: inherit;
        outline: none;

        .iconContainer {
          display: flex;
          align-items: center;
          justify-content: center;
          border-radius: 16px;
          height: 32px;

          svg {
            width: 24px;
            fill: var(--on-surface-variant);

            &.outlined {
              display: block;
            }
            &.filled {
              display: none;
            }
          }
        }

        span {
          font-weight: 500;
          line-height: 16px;
          font-size: 12px;
          color: var(--on-surface-variant);
        }

        &.active {
          /* in bar and rail, .iconContainer acts as the active indicator. */
          /* in drawer, `a` acts as the active indicator. */
          .iconContainer {
            background-color: var(--secondary-container);

            svg {
              fill: var(--on-secondary-container);

              &.filled {
                display: block;
              }
              &.outlined {
                display: none;
              }
            }
          }

          span {
            font-weight: 700;
            color: var(--on-surface);
          }
        }

        &:is(:hover, :focus) {
          .iconContainer {
            background-color: var(--primary-container);
          }
        }
      }
    }
  }

  @media (max-width: 599px) {
    /* a bottom navigation bar for compact */
    background-color: var(--surface-container);
    position: fixed;
    bottom: 0;
    width: 100%;
    padding: 12px 0 16px;
    max-height: 80px;

    ul {
      display: flex;
      align-items: center;
      justify-content: space-evenly;

      li {
        flex: 1;

        a {
          display: flex;
          flex-direction: column;
          align-items: center;
          justify-content: center;
          gap: 4px;

          .iconContainer {
            width: 64px;
          }
        }
      }
    }
  }

  @media (min-width: 600px) and (max-width: 839px) {
    /* a left navigation rail for medium */
    background-color: var(--surface-container);
    position: fixed;
    left: 0;
    top: 0;
    width: 80px;
    height: 100vh;
    padding: 12px;
    overflow-y: scroll;
    overflow-x: hidden;
    display: flex; /* required for centering the ul vertically  */

    &::-webkit-scrollbar {
      display: none;
    }
    -ms-overflow-style: none;
    scrollbar-width: none;

    ul {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: flex-start;
      gap: 12px;
      margin: auto;

      li {
        a {
          height: 56px;
          display: flex;
          flex-direction: column;
          align-items: center;
          justify-content: center;
          gap: 4px;

          .iconContainer {
            width: 56px;
          }
        }
      }
    }
  }

  @media (min-width: 840px) {
    /* a standard navigation drawer for expanded, large and extra large */
    background-color: var(--surface-container);
    width: 360px;
    position: fixed;
    top: 0;
    left: 0;
    height: 100vh;
    padding: 24px 12px;

    .headline {
      display: block;
      line-height: 20px;
      font-size: 18px;
      font-weight: 500;
      padding: 16px;
      margin: 0;
      color: var(--primary);
      text-transform: uppercase;
    }

    ul {
      li {
        a {
          /* acts as the active indicator */
          height: 56px;
          width: 336px;
          border-radius: 28px;
          display: flex;
          align-items: center;
          justify-content: flex-start;
          gap: 12px;
          padding: 0 16px;

          .iconContainer {
            height: 100%;
          }

          span {
            font-size: 14px;
            line-height: 20px;
          }

          &.active {
            background-color: var(--secondary-container);

            span {
              color: var(--on-secondary-container);
            }
          }

          &:is(:hover, :focus) {
            background-color: var(--primary-container);
          }
        }
      }
    }
  }
}

.card {
  color: var(--on-surface);
  background-color: var(--surface-container);
  border-radius: var(--shape-corner-medium);
  cursor: pointer;
  transition: box-shadow 300ms ease;

  & svg {
    fill: var(--primary);
    width: 24px;
  }

  & img {
    border-radius: inherit;
  }

  &.elevated {
    background-color: var(--surface-container-low);
    box-shadow: var(--elevation-level-1);
  }

  &.filled {
    background-color: var(--surface-container-highest);
    box-shadow: var(--elevation-level-0);
  }

  &.outlined {
    background-color: var(--surface);
    box-shadow: var(--elevation-level-0);
    outline: 1px solid var(--outline-variant);
  }

  &:hover,
  &:focus {
    box-shadow: var(--elevation-level-2);
  }

  &:disabled {
    background-color: var(--surface);
  }
}

.chip {
  height: 32px;
  display: flex;
  align-items: center;
  padding: 0px 16px;
  border-radius: var(--shape-corner-small);
  background-color: var(--surface-container-low);
  outline: 1px solid var(--outline);
  color: var(--on-surface-variant);
  transition: background-color 300ms ease;

  span,
  .labelText {
    color: var(--on-surface-variant);
    font-size: 14px;
    line-height: 20px;
    font-weight: 500;
  }

  &:hover,
  &:focus {
    background-color: var(--surface-container-high);
  }
}

button {
  font-size: 14px;
  height: 40px;
  border-radius: var(--shape-corner-full);
  padding: 0 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  border: none;
  cursor: pointer;
  background-color: var(--surface-container);
  color: var(--on-surface-variant);
  position: relative;

  /* the state layer */
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: inherit;
    opacity: 0%;
    background-color: var(--on-surface-variant);
    transition: opacity 300ms ease;
  }

  &:has(svg) {
    padding-left: 16px;

    & svg {
      width: 18px;
      fill: var(--on-surface);
    }
  }

  &.elevated {
    background-color: var(--surface-container-low);
    color: var(--primary);
    box-shadow: var(--elevation-level-1);
    transition: box-shadow 300ms ease;

    & svg {
      fill: var(--primary);
    }

    &::after {
      background-color: var(--primary);
    }

    &:hover {
      box-shadow: var(--elevation-level-2);
    }
  }

  &.filled {
    background-color: var(--primary);
    color: var(--on-primary);

    & svg {
      fill: var(--on-primary);
    }

    &::after {
      background-color: var(--on-primary);
    }
  }

  &.filled-tonal {
    background-color: var(--secondary-container);
    color: var(--on-secondary-container);
    transition: box-shadow 300ms ease;

    & svg {
      fill: var(--on-secondary-container);
    }

    &::after {
      background-color: var(--on-secondary-container);
    }

    &:hover {
      box-shadow: var(--elevation-level-1);
    }
  }

  &.outlined {
    background-color: var(--surface);
    color: var(--primary);
    outline: 1px solid var(--outline);

    & svg {
      fill: var(--primary);
    }

    &::after {
      background-color: var(--primary);
    }
  }

  &.text {
    background-color: transparent;
    color: var(--primary);

    & svg {
      fill: var(--primary);
    }

    &::after {
      background-color: var(--primary);
    }
  }

  &.icon {
    padding: 0;
    width: 40px;
    height: 40px;
    border-radius: var(--shape-corner-full);
    background-color: var(--surface-container);

    svg {
      width: 24px;
      fill: var(--primary);
    }
  }

  &.fab {
    height: 56px;
    margin: 16px;
    font-weight: 500;
    width: max-content;
    color: var(--on-primary-container);
    box-shadow: var(--elevation-level-3);
    border-radius: var(--shape-corner-medium);
    background-color: var(--primary-container);

    & svg {
      width: 24px;
      fill: var(--on-primary-container);
    }

    &:hover {
      box-shadow: var(--elevation-level-4);
    }
  }

  &:disabled {
    opacity: 38%;
    pointer-events: none;
  }

  &:hover::after {
    opacity: 8%;
  }

  &:focus::after {
    opacity: 10%;
  }

  &:active::after {
    opacity: 10%;
  }

  &[draggable='true'] {
    cursor: grab;

    &:active::after {
      cursor: grabbing;
      opacity: 16%;
    }
  }
}

dialog[open] {
  min-width: 280px;
  max-width: 560px;
  padding: 24px;
  border-radius: var(--shape-corner-extra-large);
  background-color: var(--surface-container-high);
  box-shadow: var(--elevation-level-3);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  border: none;
  z-index: 1;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  margin: 0;
  animation: fadeIn 500ms ease-in-out;

  p {
    margin: 0;
    padding: 0;
  }

  .icon {
    margin-bottom: 16px;
    fill: var(--secondary);
  }

  .headline {
    margin-bottom: 16px;
    color: var(--on-surface);
    line-height: 32px;
    font-size: 24px;
    font-weight: 400;
  }

  .supportingText {
    margin-bottom: 24px;
    color: var(--on-surface-variant);
    font-size: 14px;
    font-weight: 400;
  }

  .actions {
    display: flex;
    justify-content: flex-end;
    width: 100%;
  }

  &::backdrop {
    backdrop-filter: blur(15px);
    animation: fadeIn 500ms ease-in-out;
  }
}

html:has(dialog[open]) {
  *:not(dialog, dialog *) {
    pointer-events: none;
  }

  dialog {
    pointer-events: all;
  }

  body {
    /* When the modal is shown, we want a fixed body to prevent bg scrolling. */
    position: fixed;
    overflow: hidden;
  }
}
